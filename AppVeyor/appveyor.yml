
# NOTE: There is no 'version' key/value because this can be different for 
#       forks and dev-releases. As such, use the AppVeyor UI to define it.
#       for upstream/dev this should be in the format <upstream/release milestone>.{build}-dev
#       e.g. 0.6.{build}-dev
#       The '-dev' postfix makes sure the version is a 'pre-release' package.

configuration: Release

branches:
  except:
    - master

pull_requests:
  do_not_increment_build_number: true

environment:
  nugetFeedSource: https://www.myget.org/F/simpleauthentication/api/v2
  apiKey:
    secure: F92kP6Fl41Uv4yoGN/PBsGKVPAkFIkvcBfQwFV2TCGyg1zihi7PD+BOSOUDfHkLg

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://gist.githubusercontent.com/PureKrome/0f79e25693d574807939/raw/8cf3160c9516ef1f4effc825c0a44acc918a0b5a/appveyor-build-info.ps'))

before_build:
  - nuget restore

assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

build:
  parallel: true
  verbosity: minimal

on_success:
  - ps: if (-not $env:APPVEYOR_PULL_REQUEST_NUMBER) { $destinationPath = $env:appveyor_build_folder + ".\file1.ps1"; (new-object net.webclient).DownloadFile('https://raw.githubusercontent.com/PureKrome/PushIt/master/NuGet%20Package%20and%20Publish.ps1', $destinationPath); & $destinationPath  -Version $env:appveyor_build_version -NuGet "C:\Tools\NuGet\nuget.exe" -apiKey $env:apiKey -feedSource $env:nugetFeedSource -source '.\NuGet\' -destination '.\NuGet\' }

cache:
  - packages -> **\packages.config